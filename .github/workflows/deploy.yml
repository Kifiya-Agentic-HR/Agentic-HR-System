name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy files to EC2
        run: |
          rsync -avz --exclude '.git*' --exclude 'node_modules' ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app
        env:
          RSYNC_RSH: "ssh -o StrictHostKeyChecking=no"

      - name: Create .env file on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cat > /home/${{ secrets.EC2_USER }}/app/.env" <<'EOF'
          JOB_APPLICATION_PORT="${{ secrets.JOB_APPLICATION_PORT }}"
          JOB_PORTAL_PORT="${{ secrets.JOB_PORTAL_PORT }}"
          INTERVIEW_FRONTEND_PORT="${{ secrets.INTERVIEW_FRONTEND_PORT }}"
          INTERVIEW_BACKEND_PORT="${{ secrets.INTERVIEW_BACKEND_PORT }}"
          CMS_BACKEND_PORT="${{ secrets.CMS_BACKEND_PORT }}"
          CMS_FRONTEND_PORT="${{ secrets.CMS_FRONTEND_PORT }}"
          NOTIFICATION_PORT="${{ secrets.NOTIFICATION_PORT }}"
          REDIS_PORT="${{ secrets.REDIS_PORT }}"
          MONGO_PORT="${{ secrets.MONGO_PORT }}"
          MODEL="${{ secrets.MODEL }}"
          OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
          SMTP_HOST="${{ secrets.SMTP_HOST }}"
          SMTP_PORT="${{ secrets.SMTP_PORT }}"
          SMTP_USERNAME="${{ secrets.SMTP_USERNAME }}"
          SMTP_PASSWORD="${{ secrets.SMTP_PASSWORD }}"
          SMTP_FROM="${{ secrets.SMTP_FROM }}"
          GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}"
          JWT_SECRET="${{ secrets.JWT_SECRET }}"
          ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}"
          ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}"
          DEEPGRAM_API_KEY="${{ secrets.DEEPGRAM_API_KEY }}"
          HOST="${{ secrets.HOST }}"
          HUGGINGFACE_API_KEY="${{ secrets.HUGGINGFACE_API_KEY }}"
          CV_BUCKET="${{ secrets.CV_BUCKET }}"
          INTERVIEW_BUCKET="${{ secrets.INTERVIEW_BUCKET }}"
          UPLOAD_URL="${{ secrets.UPLOAD_URL }}"
          UPLOAD_USER="${{ secrets.UPLOAD_USER }}"
          UPLOAD_PASSWORD="${{ secrets.UPLOAD_PASSWORD }}"

          EOF

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<'EOF'
            cd /home/${{ secrets.EC2_USER }}/app
            docker-compose down
            docker-compose up -d --build
          EOF
